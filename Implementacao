import java.util.ArrayList;
import java.util.Date;
import java.text.SimpleDateFormat;

class Publicacao {
    private Date dataPublicacao;
    private String textoPublicacao;
    private String linkMidia;
    private static double contadorPublicacao = 0;

    public Publicacao(String textoPublicacao, String linkMidia) {
        this.dataPublicacao = new Date();
        this.textoPublicacao = textoPublicacao;
        this.linkMidia = linkMidia;
        contadorPublicacao++;
    }

    public Date getDataPublicacao() {
        return dataPublicacao;
    }

    public String getTextoPublicacao() {
        return textoPublicacao;
    }

    public String getLinkMidia() {
        return linkMidia;
    }

    public static double getContadorPublicacao() {
        return contadorPublicacao;
    }

    public void setTextoPublicacao(String textoPublicacao) {
        this.textoPublicacao = textoPublicacao;
    }

    public void setLinkMidia(String linkMidia) {
        this.linkMidia = linkMidia;
    }
}

class RedeSocial {
    private String nome;
    private String descricao;
    private ArrayList<Publicacao> publicacoes = new ArrayList<>();

    public RedeSocial(String nome, String descricao) {
        this.nome = nome;
        this.descricao = descricao;
    }

    public void inserePublicacao(Publicacao publi) {
        publicacoes.add(publi);
    }

    public void imprimePublicacoes() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

        System.out.println("Nome da Rede Social: " + nome);
        System.out.println("Descrição da Rede Social: " + descricao);
        System.out.println("Total de Publicações: " + Publicacao.getContadorPublicacao());
        System.out.println("Publicações:");

        for (Publicacao publi : publicacoes) {
            System.out.println("Data de Publicação: " + dateFormat.format(publi.getDataPublicacao()));
            System.out.println("Texto da Publicação: " + publi.getTextoPublicacao());
            System.out.println("Link da Mídia: " + publi.getLinkMidia());
            System.out.println("----------");
        }
    }
}

class Pessoa {
    private String nome;
    private String email;
    private String telefone;

    public Pessoa(String nome, String email, String telefone) {
        this.nome = nome;
        this.email = email;
        this.telefone = telefone;
    }

    public String getNome() {
        return nome;
    }

    public String getEmail() {
        return email;
    }

    public String getTelefone() {
        return telefone;
    }
}

class Funcionario extends Pessoa {
    private String departamento;
    private double salario;
    private String dataEntrada;
    private String rg;
    private boolean ativo;

    public Funcionario(String nome, String email, String telefone, String departamento, double salario, String dataEntrada, String rg) {
        super(nome, email, telefone);
        this.departamento = departamento;
        this.salario = salario;
        this.dataEntrada = dataEntrada;
        this.rg = rg;
        this.ativo = true;
    }

    public void bonificar(double valor) {
        salario += valor;
    }

    public void demitir() {
        ativo = false;
    }

    public void mostrarDados() {
        System.out.println("Nome: " + getNome());
        System.out.println("E-mail: " + getEmail());
        System.out.println("Telefone: " + getTelefone());
        System.out.println("Departamento: " + departamento);
        System.out.println("Salário: " + salario);
        System.out.println("Data de Entrada: " + dataEntrada);
        System.out.println("RG: " + rg);
        System.out.println("Ativo: " + (ativo ? "Sim" : "Não"));
    }
}

class Empresa {
    private String nome;
    private String cnpj;
    private int qtde_de_funcionario;
    private Funcionario[] funcionarios;

    public Empresa(String nome, String cnpj, int qtde_de_funcionario) {
        this.nome = nome;
        this.cnpj = cnpj;
        this.qtde_de_funcionario = qtde_de_funcionario;
        this.funcionarios = new Funcionario[qtde_de_funcionario];
    }

    public void adicionarFuncionario(Funcionario funcionario) {
        if (qtde_de_funcionario > 0) {
            for (int i = 0; i < funcionarios.length; i++) {
                if (funcionarios[i] == null) {
                    funcionarios[i] = funcionario;
                    qtde_de_funcionario--;
                    break;
                }
            }
        } else {
            System.out.println("A capacidade de funcionários está esgotada.");
        }
    }

    public void listarFuncionarios() {
        for (Funcionario funcionario : funcionarios) {
            if (funcionario != null) {
                funcionario.mostrarDados();
                System.out.println();
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Funcionario funcionario1 = new Funcionario("João", "joao@email.com", "123456789", "TI", 3000.0, "01/01/2022", "123456789");
        Funcionario funcionario2 = new Funcionario("Maria", "maria@email.com", "987654321", "Vendas", 2500.0, "01/03/2022", "987654321");
        Funcionario funcionario3 = new Funcionario("Pedro", "pedro@email.com", "111111111", "RH", 3500.0, "01/05/2022", "111111111");
        Funcionario funcionario4 = new Funcionario("Ana", "ana@email.com", "999999999", "Marketing", 2800.0, "01/07/2022", "999999999");
        Funcionario funcionario5 = new Funcionario("Lucas", "lucas@email.com", "777777777", "Financeiro", 3200.0, "01/09/2022", "777777777");

        Empresa empresa = new Empresa("Minha Empresa", "123456789", 5);

        empresa.adicionarFuncionario(funcionario1);
        empresa.adicionarFuncionario(funcionario2);
        empresa.adicionarFuncionario(funcionario3);
        empresa.adicionarFuncionario(funcionario4);
        empresa.adicionarFuncionario(funcionario5);

        empresa.listarFuncionarios();
    }
}
